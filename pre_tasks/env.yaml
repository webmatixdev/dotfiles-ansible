- name: Check if env configuration file exists
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.config/dotfiles_env"
  register: env_config_file

- name: Read saved environment if exists
  ansible.builtin.slurp:
    src: "{{ ansible_env.HOME }}/.config/dotfiles_env"
  register: saved_env
  when: env_config_file.stat.exists

- name: Set env from saved file if available
  ansible.builtin.set_fact:
    env: "{{ (saved_env.content | b64decode | trim) if saved_env is defined and saved_env.content is defined else omit }}"
  when: env_config_file.stat.exists and env is not defined

- name: Determine environment based on username if not provided or saved
  ansible.builtin.set_fact:
    env: >-
      {% if ansible_user_id.endswith('w') %}
        work
      {% elif ansible_user_id.endswith('p') %}
        personal
      {% else %}
        unknown
      {% endif %}
  when: env is not defined

- name: Fail if environment is unknown
  ansible.builtin.fail:
    msg: "Unable to determine environment. Either use a username ending with 'w' or 'p', or explicitly set env variable."
  when: env == "unknown"

- name: Create config directory if it doesn't exist
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config"
    state: directory
    mode: '0755'

- name: Save environment as YAML variables file
  ansible.builtin.copy:
    content: |
      ---
      env: "{{ env }}"
    dest: "{{ ansible_env.HOME }}/.config/dotfiles_env_vars"
    mode: '0644'
  when: env != "unknown"
